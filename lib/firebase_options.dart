// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyDStv2-GumXFMklspCLcyvByNkSulq_OrM',
    appId: '1:818326446424:web:0a37accd2fd765d80ec52d',
    messagingSenderId: '818326446424',
    projectId: 'movitivi-a0c73',
    authDomain: 'movitivi-a0c73.firebaseapp.com',
    storageBucket: 'movitivi-a0c73.appspot.com',
    measurementId: 'G-L5DFTLGPCP',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyA7mMLa_pfiZSe9VOG12YpB7vCjy2y2DE4',
    appId: '1:818326446424:android:2141f06509ed1f720ec52d',
    messagingSenderId: '818326446424',
    projectId: 'movitivi-a0c73',
    storageBucket: 'movitivi-a0c73.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyC88oasPD5H99TMOyw51cl4-Dp6oN61Zjw',
    appId: '1:818326446424:ios:316f7608ee429fb90ec52d',
    messagingSenderId: '818326446424',
    projectId: 'movitivi-a0c73',
    storageBucket: 'movitivi-a0c73.appspot.com',
    iosClientId:
        '818326446424-1lgs2g1j6hh1gd254h6jvc3hnciakj1l.apps.googleusercontent.com',
    iosBundleId: 'com.example.movitivi',
  );

  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
}
